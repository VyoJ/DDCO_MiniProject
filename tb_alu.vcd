$date
	Mon Nov 20 10:24:57 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb $end
$var wire 1 ! cout $end
$var wire 32 " o [31:0] $end
$var wire 1 # overflow $end
$var reg 1 $ clk $end
$var integer 32 % i [31:0] $end
$var reg 16 & i0 [15:0] $end
$var reg 16 ' i1 [15:0] $end
$var reg 4 ( op [3:0] $end
$var reg 1 ) reset $end
$scope module alu_0 $end
$var wire 16 * a [15:0] $end
$var wire 16 + add_result [15:0] $end
$var wire 16 , and_result [15:0] $end
$var wire 16 - b [15:0] $end
$var wire 1 ! c_out $end
$var wire 16 . lshift_result [15:0] $end
$var wire 32 / mult_result [31:0] $end
$var wire 16 0 nand_result [15:0] $end
$var wire 16 1 nor_result [15:0] $end
$var wire 4 2 op_code [3:0] $end
$var wire 16 3 or_result [15:0] $end
$var wire 32 4 out [31:0] $end
$var wire 1 # overflow $end
$var wire 16 5 rshift_result [15:0] $end
$var wire 16 6 sub_result [15:0] $end
$var wire 16 7 xnor_result [15:0] $end
$var wire 16 8 xor_result [15:0] $end
$scope module x1 $end
$var wire 16 9 a [15:0] $end
$var wire 16 : b [15:0] $end
$var wire 1 ! c_out $end
$var wire 1 # overflow $end
$var wire 16 ; overflow_extend [15:0] $end
$var wire 16 < sum [15:0] $end
$var wire 16 = temp_sum [15:0] $end
$scope module x1 $end
$var wire 16 > a [15:0] $end
$var wire 16 ? b [15:0] $end
$var wire 1 @ c_in $end
$var wire 1 ! c_out $end
$var wire 1 A ripple0 $end
$var wire 1 B ripple1 $end
$var wire 1 C ripple10 $end
$var wire 1 D ripple11 $end
$var wire 1 E ripple12 $end
$var wire 1 F ripple13 $end
$var wire 1 G ripple14 $end
$var wire 1 H ripple2 $end
$var wire 1 I ripple3 $end
$var wire 1 J ripple4 $end
$var wire 1 K ripple5 $end
$var wire 1 L ripple6 $end
$var wire 1 M ripple7 $end
$var wire 1 N ripple8 $end
$var wire 1 O ripple9 $end
$var wire 16 P sum [15:0] $end
$scope module f0 $end
$var wire 1 Q a $end
$var wire 1 R b $end
$var wire 1 @ c_in $end
$var wire 1 A c_out $end
$var wire 1 S s $end
$upscope $end
$scope module f1 $end
$var wire 1 T a $end
$var wire 1 U b $end
$var wire 1 A c_in $end
$var wire 1 B c_out $end
$var wire 1 V s $end
$upscope $end
$scope module f2 $end
$var wire 1 W a $end
$var wire 1 X b $end
$var wire 1 B c_in $end
$var wire 1 H c_out $end
$var wire 1 Y s $end
$upscope $end
$scope module f3 $end
$var wire 1 Z a $end
$var wire 1 [ b $end
$var wire 1 H c_in $end
$var wire 1 I c_out $end
$var wire 1 \ s $end
$upscope $end
$scope module f4 $end
$var wire 1 ] a $end
$var wire 1 ^ b $end
$var wire 1 I c_in $end
$var wire 1 J c_out $end
$var wire 1 _ s $end
$upscope $end
$scope module f5 $end
$var wire 1 ` a $end
$var wire 1 a b $end
$var wire 1 J c_in $end
$var wire 1 K c_out $end
$var wire 1 b s $end
$upscope $end
$scope module f6 $end
$var wire 1 c a $end
$var wire 1 d b $end
$var wire 1 K c_in $end
$var wire 1 L c_out $end
$var wire 1 e s $end
$upscope $end
$scope module f7 $end
$var wire 1 f a $end
$var wire 1 g b $end
$var wire 1 L c_in $end
$var wire 1 M c_out $end
$var wire 1 h s $end
$upscope $end
$scope module f8 $end
$var wire 1 i a $end
$var wire 1 j b $end
$var wire 1 M c_in $end
$var wire 1 N c_out $end
$var wire 1 k s $end
$upscope $end
$scope module f9 $end
$var wire 1 l a $end
$var wire 1 m b $end
$var wire 1 N c_in $end
$var wire 1 O c_out $end
$var wire 1 n s $end
$upscope $end
$scope module f10 $end
$var wire 1 o a $end
$var wire 1 p b $end
$var wire 1 O c_in $end
$var wire 1 C c_out $end
$var wire 1 q s $end
$upscope $end
$scope module f11 $end
$var wire 1 r a $end
$var wire 1 s b $end
$var wire 1 C c_in $end
$var wire 1 D c_out $end
$var wire 1 t s $end
$upscope $end
$scope module f12 $end
$var wire 1 u a $end
$var wire 1 v b $end
$var wire 1 D c_in $end
$var wire 1 E c_out $end
$var wire 1 w s $end
$upscope $end
$scope module f13 $end
$var wire 1 x a $end
$var wire 1 y b $end
$var wire 1 E c_in $end
$var wire 1 F c_out $end
$var wire 1 z s $end
$upscope $end
$scope module f14 $end
$var wire 1 { a $end
$var wire 1 | b $end
$var wire 1 F c_in $end
$var wire 1 G c_out $end
$var wire 1 } s $end
$upscope $end
$scope module f15 $end
$var wire 1 ~ a $end
$var wire 1 !" b $end
$var wire 1 G c_in $end
$var wire 1 ! c_out $end
$var wire 1 "" s $end
$upscope $end
$upscope $end
$scope module x2 $end
$var wire 1 #" a_last_bit $end
$var wire 1 $" b_last_bit $end
$var wire 1 %" sum_last_bit $end
$var reg 1 &" overflow $end
$var reg 1 '" x $end
$var reg 1 (" y $end
$upscope $end
$upscope $end
$scope module x2 $end
$var wire 16 )" a [15:0] $end
$var wire 16 *" b [15:0] $end
$var wire 1 +" c_in $end
$var wire 1 ! c_out $end
$var wire 1 ," inv_b $end
$var wire 1 -" ripple0 $end
$var wire 1 ." ripple1 $end
$var wire 1 /" ripple10 $end
$var wire 1 0" ripple11 $end
$var wire 1 1" ripple12 $end
$var wire 1 2" ripple13 $end
$var wire 1 3" ripple14 $end
$var wire 1 4" ripple2 $end
$var wire 1 5" ripple3 $end
$var wire 1 6" ripple4 $end
$var wire 1 7" ripple5 $end
$var wire 1 8" ripple6 $end
$var wire 1 9" ripple7 $end
$var wire 1 :" ripple8 $end
$var wire 1 ;" ripple9 $end
$var wire 16 <" sum [15:0] $end
$scope module f0 $end
$var wire 1 =" a $end
$var wire 1 ," b $end
$var wire 1 +" c_in $end
$var wire 1 -" c_out $end
$var wire 1 >" s $end
$upscope $end
$scope module f1 $end
$var wire 1 ?" a $end
$var wire 1 @" b $end
$var wire 1 -" c_in $end
$var wire 1 ." c_out $end
$var wire 1 A" s $end
$upscope $end
$scope module f2 $end
$var wire 1 B" a $end
$var wire 1 C" b $end
$var wire 1 ." c_in $end
$var wire 1 4" c_out $end
$var wire 1 D" s $end
$upscope $end
$scope module f3 $end
$var wire 1 E" a $end
$var wire 1 F" b $end
$var wire 1 4" c_in $end
$var wire 1 5" c_out $end
$var wire 1 G" s $end
$upscope $end
$scope module f4 $end
$var wire 1 H" a $end
$var wire 1 I" b $end
$var wire 1 5" c_in $end
$var wire 1 6" c_out $end
$var wire 1 J" s $end
$upscope $end
$scope module f5 $end
$var wire 1 K" a $end
$var wire 1 L" b $end
$var wire 1 6" c_in $end
$var wire 1 7" c_out $end
$var wire 1 M" s $end
$upscope $end
$scope module f6 $end
$var wire 1 N" a $end
$var wire 1 O" b $end
$var wire 1 7" c_in $end
$var wire 1 8" c_out $end
$var wire 1 P" s $end
$upscope $end
$scope module f7 $end
$var wire 1 Q" a $end
$var wire 1 R" b $end
$var wire 1 8" c_in $end
$var wire 1 9" c_out $end
$var wire 1 S" s $end
$upscope $end
$scope module f8 $end
$var wire 1 T" a $end
$var wire 1 U" b $end
$var wire 1 9" c_in $end
$var wire 1 :" c_out $end
$var wire 1 V" s $end
$upscope $end
$scope module f9 $end
$var wire 1 W" a $end
$var wire 1 X" b $end
$var wire 1 :" c_in $end
$var wire 1 ;" c_out $end
$var wire 1 Y" s $end
$upscope $end
$scope module f10 $end
$var wire 1 Z" a $end
$var wire 1 [" b $end
$var wire 1 ;" c_in $end
$var wire 1 /" c_out $end
$var wire 1 \" s $end
$upscope $end
$scope module f11 $end
$var wire 1 ]" a $end
$var wire 1 ^" b $end
$var wire 1 /" c_in $end
$var wire 1 0" c_out $end
$var wire 1 _" s $end
$upscope $end
$scope module f12 $end
$var wire 1 `" a $end
$var wire 1 a" b $end
$var wire 1 0" c_in $end
$var wire 1 1" c_out $end
$var wire 1 b" s $end
$upscope $end
$scope module f13 $end
$var wire 1 c" a $end
$var wire 1 d" b $end
$var wire 1 1" c_in $end
$var wire 1 2" c_out $end
$var wire 1 e" s $end
$upscope $end
$scope module f14 $end
$var wire 1 f" a $end
$var wire 1 g" b $end
$var wire 1 2" c_in $end
$var wire 1 3" c_out $end
$var wire 1 h" s $end
$upscope $end
$scope module f15 $end
$var wire 1 i" a $end
$var wire 1 j" b $end
$var wire 1 3" c_in $end
$var wire 1 ! c_out $end
$var wire 1 k" s $end
$upscope $end
$upscope $end
$scope module x3 $end
$var wire 16 l" a [15:0] $end
$var wire 16 m" b [15:0] $end
$var reg 16 n" a_2comp [15:0] $end
$var integer 32 o" i [31:0] $end
$var reg 32 p" p [31:0] $end
$var reg 33 q" tmp_a [32:0] $end
$var reg 33 r" tmp_a_2comp [32:0] $end
$var reg 33 s" tmp_p [32:0] $end
$upscope $end
$scope module x4 $end
$var wire 16 t" a [15:0] $end
$var wire 16 u" b [15:0] $end
$var integer 32 v" i [31:0] $end
$var reg 16 w" op [15:0] $end
$upscope $end
$scope module x5 $end
$var wire 16 x" a [15:0] $end
$var wire 16 y" b [15:0] $end
$var integer 32 z" i [31:0] $end
$var reg 16 {" op [15:0] $end
$upscope $end
$scope module x6 $end
$var wire 16 |" a [15:0] $end
$var wire 16 }" b [15:0] $end
$var integer 32 ~" i [31:0] $end
$var reg 16 !# op [15:0] $end
$upscope $end
$scope module x7 $end
$var wire 16 "# a [15:0] $end
$var wire 16 ## b [15:0] $end
$var integer 32 $# i [31:0] $end
$var reg 16 %# op [15:0] $end
$upscope $end
$scope module x8 $end
$var wire 16 &# a [15:0] $end
$var wire 16 '# b [15:0] $end
$var integer 32 (# i [31:0] $end
$var reg 16 )# op [15:0] $end
$upscope $end
$scope module x9 $end
$var wire 16 *# a [15:0] $end
$var wire 16 +# b [15:0] $end
$var integer 32 ,# i [31:0] $end
$var reg 16 -# op [15:0] $end
$upscope $end
$scope module x10 $end
$var wire 16 .# a [15:0] $end
$var wire 16 /# b [15:0] $end
$var integer 32 0# i [31:0] $end
$var reg 16 1# op [15:0] $end
$var reg 16 2# temp [15:0] $end
$upscope $end
$scope module x11 $end
$var wire 16 3# a [15:0] $end
$var wire 16 4# b [15:0] $end
$var integer 32 5# i [31:0] $end
$var reg 16 6# op [15:0] $end
$var reg 16 7# temp [15:0] $end
$upscope $end
$scope module x12 $end
$var wire 16 8# add_ans [15:0] $end
$var wire 16 9# and_ans [15:0] $end
$var wire 16 :# lshift_ans [15:0] $end
$var wire 32 ;# mul_ans [31:0] $end
$var wire 16 <# nand_ans [15:0] $end
$var wire 16 =# nor_ans [15:0] $end
$var wire 4 ># opcode [3:0] $end
$var wire 16 ?# or_ans [15:0] $end
$var wire 16 @# rshift_ans [15:0] $end
$var wire 16 A# sub_ans [15:0] $end
$var wire 16 B# xnor_ans [15:0] $end
$var wire 16 C# xor_ans [15:0] $end
$var reg 32 D# final_answer [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 D#
b0 C#
b1111111111111111 B#
bx0 A#
b0 @#
b0 ?#
b0 >#
b1111111111111111 =#
b1111111111111111 <#
b0 ;#
b0 :#
b0 9#
b0 8#
b0 7#
b0 6#
b0 5#
b0 4#
b0 3#
b0 2#
b0 1#
b0 0#
b0 /#
b0 .#
b1111111111111111 -#
b10000 ,#
b0 +#
b0 *#
b0 )#
b10000 (#
b0 '#
b0 &#
b1111111111111111 %#
b10000 $#
b0 ##
b0 "#
b1111111111111111 !#
b10000 ~"
b0 }"
b0 |"
b0 {"
b10000 z"
b0 y"
b0 x"
b0 w"
b10000 v"
b0 u"
b0 t"
b0 s"
b0 r"
b0 q"
b0 p"
b10000 o"
b0 n"
b0 m"
b0 l"
xk"
xj"
0i"
xh"
xg"
0f"
xe"
xd"
0c"
xb"
xa"
0`"
x_"
x^"
0]"
x\"
x["
0Z"
xY"
xX"
0W"
xV"
xU"
0T"
xS"
xR"
0Q"
xP"
xO"
0N"
xM"
xL"
0K"
xJ"
xI"
0H"
xG"
xF"
0E"
xD"
xC"
0B"
xA"
x@"
0?"
0>"
0="
bx0 <"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
b0 *"
b0 )"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
b0 P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b1111111111111111 7
bx0 6
b0 5
b0 4
b0 3
b0 2
b1111111111111111 1
b1111111111111111 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
1)
b0 (
b0 '
b0 &
bx %
0$
0#
b0 "
0!
$end
#5
1$
#6
b0 %
#10
0$
#13
0)
#15
1$
#16
x!
x3"
x2"
x1"
x0"
1t
x6"
x/"
1C
1h
1k
1n
b101110111000 +
b101110111000 <
1\
1b
x5"
x7"
x8"
x9"
x:"
x;"
1_
1L
1M
1N
1O
0q
b101110111000 =
b101110111000 P
b1111000000 D#
b1111000000 "
b1111000000 4
1Z
1`
1c
1f
1i
1l
1E"
1K"
1N"
1Q"
1T"
1W"
b11111010000 5#
b0 7#
b11111010000 0#
b0 2#
b1111101111000111 7
b1111101111000111 B#
b1111101111000111 -#
b10000 ,#
b10000111000 8
b10000111000 C#
b10000111000 )#
b10000 (#
b1111100000000111 1
b1111100000000111 =#
b1111100000000111 %#
b10000 $#
b1111110000111111 0
b1111110000111111 <#
b1111110000111111 !#
b10000 ~"
b11111111000 3
b11111111000 ?#
b11111111000 {"
b10000 z"
b1111000000 ,
b1111000000 8#
b1111000000 9#
b1111000000 w"
b10000 v"
b111101000010010000000 p"
b111101000010010000000 /
b111101000010010000000 ;#
b10000 o"
b1111010000100100000000 s"
b111111000001100000000000000000000 r"
b111110100000000000000000000 q"
b1111110000011000 n"
1^
1d
1g
1j
1m
1p
b1 %
b1111101000 &
b1111101000 *
b1111101000 9
b1111101000 >
b1111101000 )"
b1111101000 l"
b1111101000 t"
b1111101000 x"
b1111101000 |"
b1111101000 "#
b1111101000 &#
b1111101000 *#
b1111101000 .#
b1111101000 3#
b11111010000 '
b11111010000 -
b11111010000 :
b11111010000 ?
b11111010000 *"
b11111010000 m"
b11111010000 u"
b11111010000 y"
b11111010000 }"
b11111010000 ##
b11111010000 '#
b11111010000 +#
b11111010000 /#
b11111010000 4#
#20
0$
#25
1$
#26
b11111111000 D#
b11111111000 "
b11111111000 4
b10 %
b1 (
b1 2
b1 >#
#30
0$
#35
1$
#36
b11111111111111111111110000111111 D#
b11111111111111111111110000111111 "
b11111111111111111111110000111111 4
b11 %
b10 (
b10 2
b10 >#
#40
0$
#45
1$
#46
b11111111111111111111100000000111 D#
b11111111111111111111100000000111 "
b11111111111111111111100000000111 4
b100 %
b11 (
b11 2
b11 >#
#50
0$
#55
1$
#56
b10000111000 D#
b10000111000 "
b10000111000 4
b101 %
b100 (
b100 2
b100 >#
#60
0$
#65
1$
#66
b11111111111111111111101111000111 D#
b11111111111111111111101111000111 "
b11111111111111111111101111000111 4
b110 %
b101 (
b101 2
b101 >#
#70
0$
#75
1$
#76
b0 D#
b0 "
b0 4
b111 %
b110 (
b110 2
b110 >#
#80
0$
#85
1$
#86
b1000 %
b111 (
b111 2
b111 >#
#90
0$
#95
1$
#96
b1111000000 D#
b1111000000 "
b1111000000 4
b1001 %
b1000 (
b1000 2
b1000 >#
#100
0$
#105
1$
#106
bx0 D#
bx0 "
bx0 4
b1010 %
b1001 (
b1001 2
b1001 >#
#110
0$
#115
1$
#116
b111101000010010000000 D#
b111101000010010000000 "
b111101000010010000000 4
b1011 %
b1010 (
b1010 2
b1010 >#
#120
0$
#125
1$
#130
0$
#135
1$
#140
0$
#145
1$
#150
0$
#155
1$
#160
0$
#165
1$
#170
0$
#175
1$
#180
0$
#185
1$
#190
0$
#195
1$
#200
0$
#205
1$
#210
0$
#215
1$
#216
